

================================================================
== Vitis HLS Report for 'cpyData_copro'
================================================================
* Date:           Wed Aug 30 20:50:39 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        cpy_Data
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  6.00 ns|  4.380 ns|     1.62 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       11|       11|  66.000 ns|  66.000 ns|    1|    1|      yes|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.56>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specpipeline_ln49 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [../hls_src/cpyData_copro.cpp:49]   --->   Operation 13 'specpipeline' 'specpipeline_ln49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%spectopmodule_ln24 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_16" [../hls_src/cpyData_copro.cpp:24]   --->   Operation 14 'spectopmodule' 'spectopmodule_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln24 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_17, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [../hls_src/cpyData_copro.cpp:24]   --->   Operation 15 'specinterface' 'specinterface_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %memWR, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 65536, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %memWR"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %strm_in_V_data_V"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %strm_in_V_keep_V"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %strm_in_V_strb_V"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %strm_in_V_user_V"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %strm_in_V_last_V"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %strm_in_V_id_V"   --->   Operation 24 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %strm_in_V_dest_V"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %memW, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %memW, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %width_img"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %width_img, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_10, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %width_img, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %rows_count"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %rows_count, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_10, void @empty_11, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %rows_count, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %cols_count"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %cols_count, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_10, void @empty_12, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %cols_count, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %maxcol_cnt"   --->   Operation 37 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %maxcol_cnt, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_10, void @empty_13, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %maxcol_cnt, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %statistics"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %statistics, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_10, void @empty_14, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %statistics, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 42 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (1.00ns)   --->   "%width_img_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %width_img"   --->   Operation 43 'read' 'width_img_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 44 [1/1] (1.00ns)   --->   "%memW_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %memW"   --->   Operation 44 'read' 'memW_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i64P0A.i8P0A.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V, i32 1" [../hls_src/cpyData_copro.cpp:51]   --->   Operation 45 'nbreadreq' 'tmp' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln51 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V, void @empty_15" [../hls_src/cpyData_copro.cpp:51]   --->   Operation 46 'specaxissidechannel' 'specaxissidechannel_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %tmp, void %if.end38, void %if.then" [../hls_src/cpyData_copro.cpp:51]   --->   Operation 47 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%empty = read i84 @_ssdm_op_Read.axis.volatile.i64P0A.i8P0A.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V" [../hls_src/cpyData_copro.cpp:53]   --->   Operation 48 'read' 'empty' <Predicate = (tmp)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%input_data_data = extractvalue i84 %empty" [../hls_src/cpyData_copro.cpp:53]   --->   Operation 49 'extractvalue' 'input_data_data' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%input_data_user = extractvalue i84 %empty" [../hls_src/cpyData_copro.cpp:53]   --->   Operation 50 'extractvalue' 'input_data_user' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%input_data_last = extractvalue i84 %empty" [../hls_src/cpyData_copro.cpp:53]   --->   Operation 51 'extractvalue' 'input_data_last' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%next_reset_load = load i1 %next_reset" [../hls_src/cpyData_copro.cpp:64]   --->   Operation 52 'load' 'next_reset_load' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln56 = br i1 %input_data_user, void %if.else, void %if.then2" [../hls_src/cpyData_copro.cpp:56]   --->   Operation 53 'br' 'br_ln56' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %next_reset_load, void %if.else9, void %if.then5" [../hls_src/cpyData_copro.cpp:64]   --->   Operation 54 'br' 'br_ln64' <Predicate = (tmp & !input_data_user)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln72 = br i1 %input_data_last, void %if.end14, void %if.then13" [../hls_src/cpyData_copro.cpp:72]   --->   Operation 55 'br' 'br_ln72' <Predicate = (tmp & !input_data_user & !next_reset_load)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (1.58ns)   --->   "%store_ln74 = store i1 1, i1 %next_reset" [../hls_src/cpyData_copro.cpp:74]   --->   Operation 56 'store' 'store_ln74' <Predicate = (tmp & !input_data_user & !next_reset_load & input_data_last)> <Delay = 1.58>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln75 = br void %if.end14" [../hls_src/cpyData_copro.cpp:75]   --->   Operation 57 'br' 'br_ln75' <Predicate = (tmp & !input_data_user & !next_reset_load & input_data_last)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln65 = store i1 0, i1 %next_reset" [../hls_src/cpyData_copro.cpp:65]   --->   Operation 58 'store' 'store_ln65' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.58>
ST_1 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln61 = store i1 0, i1 %next_reset" [../hls_src/cpyData_copro.cpp:61]   --->   Operation 59 'store' 'store_ln61' <Predicate = (tmp & input_data_user)> <Delay = 1.58>
ST_1 : Operation 60 [1/1] (1.70ns)   --->   "%br_ln62 = br void %if.end16" [../hls_src/cpyData_copro.cpp:62]   --->   Operation 60 'br' 'br_ln62' <Predicate = (tmp & input_data_user)> <Delay = 1.70>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%data_wr = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %input_data_data, i32 32, i32 63" [../hls_src/cpyData_copro.cpp:81]   --->   Operation 61 'partselect' 'data_wr' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%row = trunc i64 %input_data_data" [../hls_src/cpyData_copro.cpp:82]   --->   Operation 62 'trunc' 'row' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%col = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %input_data_data, i32 16, i32 26" [../hls_src/cpyData_copro.cpp:83]   --->   Operation 63 'partselect' 'col' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%width = trunc i32 %width_img_read" [../hls_src/cpyData_copro.cpp:85]   --->   Operation 64 'trunc' 'width' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i11 %row" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 65 'zext' 'zext_ln86' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i12 %width" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 66 'zext' 'zext_ln86_1' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 67 [3/3] (1.05ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i23 %zext_ln86_1, i23 %zext_ln86" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 67 'mul' 'mul_ln86' <Predicate = (tmp)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 2 <SV = 1> <Delay = 1.05>
ST_2 : Operation 68 [2/3] (1.05ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i23 %zext_ln86_1, i23 %zext_ln86" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 68 'mul' 'mul_ln86' <Predicate = (tmp)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.10>
ST_3 : Operation 69 [1/3] (0.00ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i23 %zext_ln86_1, i23 %zext_ln86" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 69 'mul' 'mul_ln86' <Predicate = (tmp)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i11 %col" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 70 'zext' 'zext_ln86_2' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 71 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln86 = add i23 %mul_ln86, i23 %zext_ln86_2" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 71 'add' 'add_ln86' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.10>
ST_4 : Operation 72 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln86 = add i23 %mul_ln86, i23 %zext_ln86_2" [../hls_src/cpyData_copro.cpp:86]   --->   Operation 72 'add' 'add_ln86' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 3.52>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%rows_counter_load = load i11 %rows_counter" [../hls_src/cpyData_copro.cpp:67]   --->   Operation 73 'load' 'rows_counter_load' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%columns_counter_load = load i12 %columns_counter" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 74 'load' 'columns_counter_load' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%max_col_counter_load = load i12 %max_col_counter" [../hls_src/cpyData_copro.cpp:66]   --->   Operation 75 'load' 'max_col_counter_load' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (1.54ns)   --->   "%add_ln71 = add i12 %columns_counter_load, i12 1" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 76 'add' 'add_ln71' <Predicate = (tmp & !input_data_user & !next_reset_load)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (1.58ns)   --->   "%store_ln71 = store i12 %add_ln71, i12 %columns_counter" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 77 'store' 'store_ln71' <Predicate = (tmp & !input_data_user & !next_reset_load)> <Delay = 1.58>
ST_5 : Operation 78 [1/1] (1.54ns)   --->   "%icmp_ln66 = icmp_ult  i12 %max_col_counter_load, i12 %columns_counter_load" [../hls_src/cpyData_copro.cpp:66]   --->   Operation 78 'icmp' 'icmp_ln66' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (1.58ns)   --->   "%br_ln66 = br i1 %icmp_ln66, void %if.end, void %if.then7" [../hls_src/cpyData_copro.cpp:66]   --->   Operation 79 'br' 'br_ln66' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.58>
ST_5 : Operation 80 [1/1] (1.58ns)   --->   "%store_ln66 = store i12 %columns_counter_load, i12 %max_col_counter" [../hls_src/cpyData_copro.cpp:66]   --->   Operation 80 'store' 'store_ln66' <Predicate = (tmp & !input_data_user & next_reset_load & icmp_ln66)> <Delay = 1.58>
ST_5 : Operation 81 [1/1] (1.58ns)   --->   "%br_ln66 = br void %if.end" [../hls_src/cpyData_copro.cpp:66]   --->   Operation 81 'br' 'br_ln66' <Predicate = (tmp & !input_data_user & next_reset_load & icmp_ln66)> <Delay = 1.58>
ST_5 : Operation 82 [1/1] (1.63ns)   --->   "%add_ln67 = add i11 %rows_counter_load, i11 1" [../hls_src/cpyData_copro.cpp:67]   --->   Operation 82 'add' 'add_ln67' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (1.58ns)   --->   "%store_ln67 = store i11 %add_ln67, i11 %rows_counter" [../hls_src/cpyData_copro.cpp:67]   --->   Operation 83 'store' 'store_ln67' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.58>
ST_5 : Operation 84 [1/1] (1.58ns)   --->   "%store_ln68 = store i12 0, i12 %columns_counter" [../hls_src/cpyData_copro.cpp:68]   --->   Operation 84 'store' 'store_ln68' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.58>
ST_5 : Operation 85 [1/1] (1.58ns)   --->   "%store_ln57 = store i11 0, i11 %rows_counter" [../hls_src/cpyData_copro.cpp:57]   --->   Operation 85 'store' 'store_ln57' <Predicate = (tmp & input_data_user)> <Delay = 1.58>
ST_5 : Operation 86 [1/1] (1.58ns)   --->   "%store_ln58 = store i12 0, i12 %columns_counter" [../hls_src/cpyData_copro.cpp:58]   --->   Operation 86 'store' 'store_ln58' <Predicate = (tmp & input_data_user)> <Delay = 1.58>
ST_5 : Operation 87 [1/1] (1.58ns)   --->   "%store_ln59 = store i12 0, i12 %max_col_counter" [../hls_src/cpyData_copro.cpp:59]   --->   Operation 87 'store' 'store_ln59' <Predicate = (tmp & input_data_user)> <Delay = 1.58>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i23.i2, i23 %add_ln86, i2 0" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 88 'bitconcatenate' 'shl_ln' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln91 = zext i25 %shl_ln" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 89 'zext' 'zext_ln91' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (3.52ns)   --->   "%add_ln91 = add i64 %zext_ln91, i64 %memW_read" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 90 'add' 'add_ln91' <Predicate = (tmp)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln91, i32 2, i32 63" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 91 'partselect' 'trunc_ln' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%sext_ln91 = sext i62 %trunc_ln" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 92 'sext' 'sext_ln91' <Predicate = (tmp)> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%memWR_addr = getelementptr i32 %memWR, i64 %sext_ln91" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 93 'getelementptr' 'memWR_addr' <Predicate = (tmp)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.38>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%numWrites_load = load i32 %numWrites" [../hls_src/cpyData_copro.cpp:79]   --->   Operation 94 'load' 'numWrites_load' <Predicate = (tmp)> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (1.70ns)   --->   "%br_ln0 = br void %if.end16"   --->   Operation 95 'br' 'br_ln0' <Predicate = (tmp & !input_data_user & !next_reset_load)> <Delay = 1.70>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%max_col_counter_loc_0 = phi i12 %columns_counter_load, void %if.then7, i12 %max_col_counter_load, void %if.then5" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 96 'phi' 'max_col_counter_loc_0' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (1.70ns)   --->   "%br_ln69 = br void %if.end16" [../hls_src/cpyData_copro.cpp:69]   --->   Operation 97 'br' 'br_ln69' <Predicate = (tmp & !input_data_user & next_reset_load)> <Delay = 1.70>
ST_6 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln79)   --->   "%numWrites_loc_0 = phi i32 0, void %if.then2, i32 %numWrites_load, void %if.end, i32 %numWrites_load, void %if.end14" [../hls_src/cpyData_copro.cpp:79]   --->   Operation 98 'phi' 'numWrites_loc_0' <Predicate = (tmp)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln79 = add i32 %numWrites_loc_0, i32 1" [../hls_src/cpyData_copro.cpp:79]   --->   Operation 99 'add' 'add_ln79' <Predicate = (tmp)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 100 [1/1] (4.38ns)   --->   "%memWR_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %memWR_addr, i32 1" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 100 'writereq' 'memWR_addr_req' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%store_ln60 = store i32 %add_ln79, i32 %numWrites" [../hls_src/cpyData_copro.cpp:60]   --->   Operation 101 'store' 'store_ln60' <Predicate = (tmp)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 4.38>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%rows_counter_loc_0 = phi i11 0, void %if.then2, i11 %add_ln67, void %if.end, i11 %rows_counter_load, void %if.end14" [../hls_src/cpyData_copro.cpp:67]   --->   Operation 102 'phi' 'rows_counter_loc_0' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%max_col_counter_loc_1 = phi i12 0, void %if.then2, i12 %max_col_counter_loc_0, void %if.end, i12 %max_col_counter_load, void %if.end14" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 103 'phi' 'max_col_counter_loc_1' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%empty_22 = phi i12 0, void %if.then2, i12 0, void %if.end, i12 %add_ln71, void %if.end14" [../hls_src/cpyData_copro.cpp:71]   --->   Operation 104 'phi' 'empty_22' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (4.38ns)   --->   "%write_ln91 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %memWR_addr, i32 %data_wr, i4 15" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 105 'write' 'write_ln91' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 106 [1/1] (1.00ns)   --->   "%write_ln92 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %statistics, i32 %add_ln79" [../hls_src/cpyData_copro.cpp:92]   --->   Operation 106 'write' 'write_ln92' <Predicate = (tmp)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i11 %rows_counter_loc_0" [../hls_src/cpyData_copro.cpp:93]   --->   Operation 107 'zext' 'zext_ln93' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (1.00ns)   --->   "%write_ln93 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %rows_count, i32 %zext_ln93" [../hls_src/cpyData_copro.cpp:93]   --->   Operation 108 'write' 'write_ln93' <Predicate = (tmp)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln94 = zext i12 %empty_22" [../hls_src/cpyData_copro.cpp:94]   --->   Operation 109 'zext' 'zext_ln94' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (1.00ns)   --->   "%write_ln94 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %cols_count, i32 %zext_ln94" [../hls_src/cpyData_copro.cpp:94]   --->   Operation 110 'write' 'write_ln94' <Predicate = (tmp)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i12 %max_col_counter_loc_1" [../hls_src/cpyData_copro.cpp:95]   --->   Operation 111 'zext' 'zext_ln95' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (1.00ns)   --->   "%write_ln95 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %maxcol_cnt, i32 %zext_ln95" [../hls_src/cpyData_copro.cpp:95]   --->   Operation 112 'write' 'write_ln95' <Predicate = (tmp)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 8 <SV = 7> <Delay = 4.38>
ST_8 : Operation 113 [5/5] (4.38ns)   --->   "%memWR_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %memWR_addr" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 113 'writeresp' 'memWR_addr_resp' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 4.38>
ST_9 : Operation 114 [4/5] (4.38ns)   --->   "%memWR_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %memWR_addr" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 114 'writeresp' 'memWR_addr_resp' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 4.38>
ST_10 : Operation 115 [3/5] (4.38ns)   --->   "%memWR_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %memWR_addr" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 115 'writeresp' 'memWR_addr_resp' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 4.38>
ST_11 : Operation 116 [2/5] (4.38ns)   --->   "%memWR_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %memWR_addr" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 116 'writeresp' 'memWR_addr_resp' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 4.38>
ST_12 : Operation 117 [1/5] (4.38ns)   --->   "%memWR_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %memWR_addr" [../hls_src/cpyData_copro.cpp:91]   --->   Operation 117 'writeresp' 'memWR_addr_resp' <Predicate = (tmp)> <Delay = 4.38> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "%br_ln97 = br void %if.end38" [../hls_src/cpyData_copro.cpp:97]   --->   Operation 118 'br' 'br_ln97' <Predicate = (tmp)> <Delay = 0.00>
ST_12 : Operation 119 [1/1] (0.00ns)   --->   "%ret_ln98 = ret" [../hls_src/cpyData_copro.cpp:98]   --->   Operation 119 'ret' 'ret_ln98' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.000ns, clock uncertainty: 1.620ns.

 <State 1>: 2.566ns
The critical path consists of the following:
	s_axi read operation ('width_img_read') on port 'width_img' [50]  (1.000 ns)
	'mul' operation of DSP[110] ('mul_ln86', ../hls_src/cpyData_copro.cpp:86) [108]  (1.050 ns)
	blocking operation 0.516 ns on control path)

 <State 2>: 1.050ns
The critical path consists of the following:
	'mul' operation of DSP[110] ('mul_ln86', ../hls_src/cpyData_copro.cpp:86) [108]  (1.050 ns)

 <State 3>: 2.100ns
The critical path consists of the following:
	'mul' operation of DSP[110] ('mul_ln86', ../hls_src/cpyData_copro.cpp:86) [108]  (0.000 ns)
	'add' operation of DSP[110] ('add_ln86', ../hls_src/cpyData_copro.cpp:86) [110]  (2.100 ns)

 <State 4>: 2.100ns
The critical path consists of the following:
	'add' operation of DSP[110] ('add_ln86', ../hls_src/cpyData_copro.cpp:86) [110]  (2.100 ns)

 <State 5>: 3.520ns
The critical path consists of the following:
	'add' operation ('add_ln91', ../hls_src/cpyData_copro.cpp:91) [113]  (3.520 ns)

 <State 6>: 4.380ns
The critical path consists of the following:
	bus request operation ('memWR_addr_req', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [117]  (4.380 ns)

 <State 7>: 4.380ns
The critical path consists of the following:
	bus write operation ('write_ln91', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [118]  (4.380 ns)

 <State 8>: 4.380ns
The critical path consists of the following:
	bus response operation ('memWR_addr_resp', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [119]  (4.380 ns)

 <State 9>: 4.380ns
The critical path consists of the following:
	bus response operation ('memWR_addr_resp', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [119]  (4.380 ns)

 <State 10>: 4.380ns
The critical path consists of the following:
	bus response operation ('memWR_addr_resp', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [119]  (4.380 ns)

 <State 11>: 4.380ns
The critical path consists of the following:
	bus response operation ('memWR_addr_resp', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [119]  (4.380 ns)

 <State 12>: 4.380ns
The critical path consists of the following:
	bus response operation ('memWR_addr_resp', ../hls_src/cpyData_copro.cpp:91) on port 'memWR' (../hls_src/cpyData_copro.cpp:91) [119]  (4.380 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
