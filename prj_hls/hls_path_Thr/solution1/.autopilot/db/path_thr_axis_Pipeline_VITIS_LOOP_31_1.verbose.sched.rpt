

================================================================
== Vitis HLS Report for 'path_thr_axis_Pipeline_VITIS_LOOP_31_1'
================================================================
* Date:           Wed Aug 30 10:22:10 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hls_path_Thr
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.838 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      103|      103|  1.030 us|  1.030 us|  103|  103|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_31_1  |      100|      100|         2|          1|          1|   100|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%addr_loc_0 = alloca i32 1"   --->   Operation 6 'alloca' 'addr_loc_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %strm_out_V_data_V, i4 %strm_out_V_keep_V, i4 %strm_out_V_strb_V, i1 %strm_out_V_user_V, i1 %strm_out_V_last_V, i1 %strm_out_V_id_V, i1 %strm_out_V_dest_V, void @empty_6"   --->   Operation 7 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V, void @empty_7"   --->   Operation 8 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %strm_out_V_dest_V, i1 %strm_out_V_id_V, i1 %strm_out_V_last_V, i1 %strm_out_V_user_V, i4 %strm_out_V_strb_V, i4 %strm_out_V_keep_V, i32 %strm_out_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %strm_in_V_dest_V, i1 %strm_in_V_id_V, i1 %strm_in_V_last_V, i1 %strm_in_V_user_V, i8 %strm_in_V_strb_V, i8 %strm_in_V_keep_V, i64 %strm_in_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%addr_load_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %addr_load"   --->   Operation 11 'read' 'addr_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %addr_load_read, i32 %addr_loc_0"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%br_ln0 = br void %while.cond"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 4.83>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%addr_flag_0 = phi i1 0, void %newFuncRoot, i1 1, void %while.body"   --->   Operation 14 'phi' 'addr_flag_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i64P0A.i8P0A.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V, i32 1" [../hls_src/path_thr_axis.cpp:31]   --->   Operation 15 'nbreadreq' 'tmp' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %tmp, void %while.end.exitStub, void %while.body" [../hls_src/path_thr_axis.cpp:31]   --->   Operation 16 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%addr_loc_0_load = load i32 %addr_loc_0" [../hls_src/path_thr_axis.cpp:51]   --->   Operation 17 'load' 'addr_loc_0_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%empty = read i84 @_ssdm_op_Read.axis.volatile.i64P0A.i8P0A.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A, i64 %strm_in_V_data_V, i8 %strm_in_V_keep_V, i8 %strm_in_V_strb_V, i1 %strm_in_V_user_V, i1 %strm_in_V_last_V, i1 %strm_in_V_id_V, i1 %strm_in_V_dest_V" [../hls_src/path_thr_axis.cpp:36]   --->   Operation 18 'read' 'empty' <Predicate = (tmp)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%input_data_data = extractvalue i84 %empty" [../hls_src/path_thr_axis.cpp:36]   --->   Operation 19 'extractvalue' 'input_data_data' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%input_data_user = extractvalue i84 %empty" [../hls_src/path_thr_axis.cpp:36]   --->   Operation 20 'extractvalue' 'input_data_user' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%input_data_last = extractvalue i84 %empty" [../hls_src/path_thr_axis.cpp:36]   --->   Operation 21 'extractvalue' 'input_data_last' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_s = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %input_data_data, i32 32, i32 63" [../hls_src/path_thr_axis.cpp:43]   --->   Operation 22 'partselect' 'tmp_s' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln43 = trunc i64 %input_data_data" [../hls_src/path_thr_axis.cpp:43]   --->   Operation 23 'trunc' 'trunc_ln43' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (2.55ns)   --->   "%data_wr = add i32 %trunc_ln43, i32 %tmp_s" [../hls_src/path_thr_axis.cpp:43]   --->   Operation 24 'add' 'data_wr' <Predicate = (tmp)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (2.55ns)   --->   "%add_ln51 = add i32 %addr_loc_0_load, i32 1" [../hls_src/path_thr_axis.cpp:51]   --->   Operation 25 'add' 'add_ln51' <Predicate = (tmp)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.69ns)   --->   "%select_ln51 = select i1 %input_data_user, i32 1, i32 %add_ln51" [../hls_src/path_thr_axis.cpp:51]   --->   Operation 26 'select' 'select_ln51' <Predicate = (tmp)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln51 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %statistics, i32 %select_ln51" [../hls_src/path_thr_axis.cpp:51]   --->   Operation 27 'write' 'write_ln51' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln31 = store i32 %select_ln51, i32 %addr_loc_0" [../hls_src/path_thr_axis.cpp:31]   --->   Operation 28 'store' 'store_ln31' <Predicate = (tmp)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln34 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_1" [../hls_src/path_thr_axis.cpp:34]   --->   Operation 29 'specpipeline' 'specpipeline_ln34' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%speclooptripcount_ln33 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 100, i64 100, i64 100" [../hls_src/path_thr_axis.cpp:33]   --->   Operation 30 'speclooptripcount' 'speclooptripcount_ln33' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%specloopname_ln31 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [../hls_src/path_thr_axis.cpp:31]   --->   Operation 31 'specloopname' 'specloopname_ln31' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%write_ln49 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %strm_out_V_data_V, i4 %strm_out_V_keep_V, i4 %strm_out_V_strb_V, i1 %strm_out_V_user_V, i1 %strm_out_V_last_V, i1 %strm_out_V_id_V, i1 %strm_out_V_dest_V, i32 %data_wr, i4 15, i4 0, i1 %input_data_user, i1 %input_data_last, i1 0, i1 0" [../hls_src/path_thr_axis.cpp:49]   --->   Operation 32 'write' 'write_ln49' <Predicate = (tmp)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln31 = br void %while.cond" [../hls_src/path_thr_axis.cpp:31]   --->   Operation 33 'br' 'br_ln31' <Predicate = (tmp)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %addr_flag_0_out, i1 %addr_flag_0"   --->   Operation 34 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%addr_loc_0_load_1 = load i32 %addr_loc_0"   --->   Operation 35 'load' 'addr_loc_0_load_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %addr_loc_0_out, i32 %addr_loc_0_load_1"   --->   Operation 36 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 37 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation ('addr_loc_0') [19]  (0.000 ns)
	'store' operation ('store_ln0') of variable 'addr_load_read' on local variable 'addr_loc_0' [25]  (1.588 ns)

 <State 2>: 4.838ns
The critical path consists of the following:
	'load' operation ('addr_loc_0_load', ../hls_src/path_thr_axis.cpp:51) on local variable 'addr_loc_0' [32]  (0.000 ns)
	'add' operation ('add_ln51', ../hls_src/path_thr_axis.cpp:51) [44]  (2.552 ns)
	'select' operation ('select_ln51', ../hls_src/path_thr_axis.cpp:51) [45]  (0.698 ns)
	'store' operation ('store_ln31', ../hls_src/path_thr_axis.cpp:31) of variable 'select_ln51', ../hls_src/path_thr_axis.cpp:51 on local variable 'addr_loc_0' [47]  (1.588 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 0.000ns
The critical path consists of the following:

 <State 5>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
